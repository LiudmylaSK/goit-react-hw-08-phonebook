{"version":3,"file":"static/js/327.ade16565.chunk.js","mappings":"sNAEMA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAS,EAElCC,GAAoBC,EAAAA,EAAAA,IAC/BJ,GACA,SAAAE,GAAQ,OAAIA,EAASA,QAAQ,IAElBG,GAAkBD,EAAAA,EAAAA,IAC7BJ,GACA,SAAAE,GAAQ,OAAIA,EAASI,SAAS,IAMnBC,IAJcH,EAAAA,EAAAA,IACzBJ,GACA,SAAAE,GAAQ,OAAIA,EAASM,KAAK,IAEK,SAAAP,GAAK,OAAIA,EAAMQ,MAAO,GAE1CC,EAAyB,SAAAT,GACpC,IACEQ,EAEER,EAFFQ,OACYP,EACVD,EADFC,SAAYA,SAEd,OAAKO,GAGqBA,EAEtBP,EAASO,QAAO,SAAAE,GAAO,OACrBA,EAAQC,KAAKC,cAAcC,SAASL,EAAOI,cAAc,IALtDX,CASX,E,UChCA,GAAgB,SAAW,mCAAmC,KAAO,+BAA+B,iBAAmB,4C,UCI1Ga,EAAc,SAAHC,GAA6B,IAAvBC,EAAED,EAAFC,GAAIL,EAAII,EAAJJ,KAAMM,EAAMF,EAANE,OAChCC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAAA,SAAaC,SAAA,EAC1BH,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,KAASC,SAAA,CAAEZ,EAAK,QACjCa,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAAA,OAAWC,SAAEN,KAC9BO,EAAAA,EAAAA,KAAA,UACEH,UAAWC,EAAAA,iBACXG,KAAK,SACLC,QAAS,kBACPR,GAASS,EAAAA,EAAAA,IAAmBX,GAAI,EACjCO,SACF,aAKP,ECrBA,EAA+B,mCAA/B,EAAgF,kCCKnEK,EAAW,WACtB,IAAM3B,GAAW4B,EAAAA,EAAAA,IAAYpB,GAE7B,OACEe,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,CAAAP,SACGQ,MAAMC,QAAQ/B,IAAaA,EAASgC,OAAS,GAC5CT,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAiBC,SAC7BtB,EAASiC,KAAI,SAAAnB,GAAA,IAAGC,EAAED,EAAFC,GAAIL,EAAII,EAAJJ,KAAMM,EAAMF,EAANE,OAAM,OAC/BO,EAAAA,EAAAA,KAACV,EAAW,CAAUE,GAAIA,EAAIL,KAAMA,EAAMM,OAAQA,GAAhCD,EAA0C,OAIhEQ,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAgBC,SAAC,wEAMvC,E,4DCvBA,GAAgB,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,aAAe,kCAAkC,MAAQ,2BAA2B,iBAAmB,uCCWxNY,EAASC,EAAAA,GACL,CACNzB,KAAMyB,EAAAA,KAAaC,WAAWC,IAAI,GAClCrB,OAAQmB,EAAAA,KAAaE,IAAI,GAAGD,aAE7BA,WAEUE,EAAc,WAAO,IAADC,EAAAC,EAC/BC,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYV,KALtBW,EAAQJ,EAARI,SACAC,EAAYL,EAAZK,aACAC,EAAKN,EAALM,MACaC,EAAMP,EAAnBQ,UAAaD,OAIT/B,GAAWC,EAAAA,EAAAA,MACXgC,GAActB,EAAAA,EAAAA,IAAY3B,GAiBhC,OACEkB,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,KAAU8B,SAAUL,GAjBtB,SAAArC,GAEbyC,EAAYE,MACV,SAAAC,GAAI,OACFA,EAAK3C,KAAKC,cAAc2C,SACtB7C,EAAQC,KAAKC,cAAc2C,QAC7BD,EAAKrC,OAAOsC,SAAW7C,EAAQO,OAAOsC,MAAM,IAGhDC,EAAAA,GAAAA,QAAc,gDAGhBtC,GAASuC,EAAAA,EAAAA,IAAgB/C,IACzBsC,IACF,IAG8DzB,SAAA,EAC1DH,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAAA,MAAUC,SAAA,EAACC,EAAAA,EAAAA,KAACkC,EAAAA,IAAc,CAACrC,UAAWC,EAAAA,cAAkB,wBACvEF,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAAA,MAAUC,SAAA,CAAC,SAE3BC,EAAAA,EAAAA,KAAA,SAAAmC,EAAAA,EAAAA,GAAA,CACEC,YAAY,qBACZvC,UAAWC,EAAAA,cACPwB,EAAS,OAAQ,CAAErB,KAAM,YAE9BD,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAAA,MAAUC,SAAa,QAAbiB,EAAES,EAAOtC,YAAI,IAAA6B,OAAA,EAAXA,EAAaqB,cAE1CzC,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAAA,MAAUC,SAAA,CAAC,UAE3BC,EAAAA,EAAAA,KAAA,SAAAmC,EAAAA,EAAAA,GAAA,CACEtC,UAAWC,EAAAA,aACXsC,YAAY,sBACRd,EAAS,SAAU,CAAErB,KAAM,WAEhCD,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAAA,MAAUC,SAAe,QAAfkB,EAAEQ,EAAOhC,cAAM,IAAAwB,OAAA,EAAbA,EAAeoB,cAE5CrC,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAAA,iBAAuBG,KAAK,SAAQF,SAAC,kBAK9D,E,UCvEA,GAAgB,WAAa,iCAAiC,YAAc,mCCK/DuC,EAAe,WAC1B,IAAM5C,GAAWC,EAAAA,EAAAA,MACX4C,GAAclC,EAAAA,EAAAA,IAAYvB,GAIhC,OACEkB,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAAA,WAAeC,UAC9BH,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAAA,YAAgBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,2BACNC,EAAAA,EAAAA,KAAA,SACEH,UAAWC,EAAAA,YACXG,KAAK,OACLd,KAAK,SACLiD,YAAY,oBACZI,MAAOD,EACPE,SAbmB,SAACC,GAC5BhD,GAASiD,EAAAA,EAAAA,GAAUD,EAAME,OAAOJ,OAClC,EAYW,aAAW,gCAKtB,E,UC3BA,EAA+B,mCAA/B,EAAoI,sCCkCpI,EApBqB,WACnB,IAAQ3D,GAAcwB,EAAAA,EAAAA,IAAYzB,GAA1BC,UACFa,GAAWC,EAAAA,EAAAA,MAMjB,OAJAkD,EAAAA,EAAAA,YAAU,WACRnD,GAASoD,EAAAA,EAAAA,MACX,GAAG,CAACpD,KAGFE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAACe,EAAW,KACZnB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAoBC,SAAA,EAClCC,EAAAA,EAAAA,KAACsC,EAAY,IACZzD,IAAamB,EAAAA,EAAAA,KAAC+C,EAAAA,EAAM,KACrB/C,EAAAA,EAAAA,KAACI,EAAQ,SAIjB,C","sources":["redux/contacts/contactsSelectors.js","webpack://react-homework-template/./src/components/ContactsListItem/ContactsListItem.module.css?e52b","components/ContactsListItem/ContactsListItem.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/ContactsForm/ContactForm.module.css?78ec","components/ContactsForm/ContactForm.jsx","webpack://react-homework-template/./src/components/SearchFilter/SearchFilter.module.css?1801","components/SearchFilter/SearchFilter.jsx","webpack://react-homework-template/./src/Pages/ContactsPage/ContactsPage.module.css?6772","Pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nconst selectContacts = state => state.contacts;\n\nexport const selectAllContacts = createSelector(\n  selectContacts,\n  contacts => contacts.contacts\n);\nexport const selectIsLoading = createSelector(\n  selectContacts,\n  contacts => contacts.isLoading\n);\nexport const selectError = createSelector(\n  selectContacts,\n  contacts => contacts.error\n);\nexport const selectFilterValue = state => state.filter;\n\nexport const selectFilteredContacts = state => {\n  const {\n    filter,\n    contacts: { contacts },\n  } = state;\n  if (!filter) {\n    return contacts;\n  }\n  const filteredContacts = !filter\n    ? contacts\n    : contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n\n  return filteredContacts;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactsListItem_listItem__us669\",\"name\":\"ContactsListItem_name__Az9W+\",\"buttonDeleteItem\":\"ContactsListItem_buttonDeleteItem__BbHsJ\"};","\nimport { useDispatch } from 'react-redux';\nimport { deleteContactThunk } from 'redux/contacts/contactsOperations';\nimport css from './ContactsListItem.module.css';\n\nexport const ContactItem = ({ id, name, number}) => {\n  const dispatch = useDispatch();\n  return (\n    <li className={css.listItem}>\n      <span className={css.name}>{name}:</span>\n      <span className={css.number}>{number}</span>\n      <button\n        className={css.buttonDeleteItem}\n        type=\"button\"\n        onClick={() =>\n          dispatch(deleteContactThunk(id))\n        }\n      >\n        Delete\n      </button>\n    </li>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactsList_contactsList__ZQI1L\",\"contactText\":\"ContactsList_contactText__r3+vD\"};","\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/contactsSelectors';\nimport { ContactItem } from 'components/ContactsListItem/ContactsListItem';\nimport css from './ContactsList.module.css';\n\nexport const Contacts = () => {\n  const contacts = useSelector(selectFilteredContacts);\n\n  return (\n    <>\n      {Array.isArray(contacts) && contacts.length > 0 ? (\n        <ul className={css.contactsList}>\n          {contacts.map(({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} />\n          ))}\n        </ul>\n      ) : (\n        <p className={css.contactText}>\n           There are no contacts in your Phonebook yet. Create the first one.\n        </p>\n      )}\n    </>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__Vl2ry\",\"title\":\"ContactForm_title__e6FMt\",\"label\":\"ContactForm_label__0yI1K\",\"contactInput\":\"ContactForm_contactInput__0mNsM\",\"error\":\"ContactForm_error__Vvn8G\",\"buttonAddContact\":\"ContactForm_buttonAddContact__WE8h1\"};","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { addContactThunk } from 'redux/contacts/contactsOperations';\nimport { selectAllContacts } from 'redux/contacts/contactsSelectors';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { toast } from 'react-toastify';\nimport { MdContactPhone } from 'react-icons/md';\nimport css from './ContactForm.module.css';\n\nconst schema = yup\n  .object({\n    name: yup.string().required().min(4),\n    number: yup.string().min(5).required(),\n  })\n  .required();\n\nexport const ContactForm = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const dispatch = useDispatch();\n  const contactList = useSelector(selectAllContacts);\n  const onSubmit = contact => {\n    if (\n      contactList.some(\n        item =>\n          item.name.toLowerCase().trim() ===\n            contact.name.toLowerCase().trim() ||\n          item.number.trim() === contact.number.trim()\n      )\n    ) {\n      toast.warning('This name is already in your contacts list.');\n      return;\n    }\n    dispatch(addContactThunk(contact));\n    reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\n      <h2 className={css.title}><MdContactPhone className={css.iconContact}/>  Add new contact</h2>\n      <label className={css.label}>\n        Name:\n        <input\n          placeholder=\"Enter contact name\"\n          className={css.contactInput}\n          {...register('name', { type: 'text' })}\n        />\n        {<p className={css.error}>{errors.name?.message}</p>}\n      </label>\n      <label className={css.label}>\n        Phone:\n        <input\n          className={css.contactInput}\n          placeholder=\"Enter phone number\"\n          {...register('number', { type: 'tel' })}\n        />\n        {<p className={css.error}>{errors.number?.message}</p>}\n      </label>\n      <button className={css.buttonAddContact } type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchFilter_searchForm__Kv61x\",\"searchInput\":\"SearchFilter_searchInput__nxrHR\"};","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilterValue } from 'redux/contacts/contactsSelectors';\nimport css from './SearchFilter.module.css';\n\nexport const SearchFilter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilterValue);\n  const handleFilterChange = (event) => {\n  dispatch(setFilter(event.target.value));\n};\n  return (\n    <form className={css.searchForm}>\n      <label className={css.searchLabel}>\n        <span>Find contacts by name</span>\n        <input\n          className={css.searchInput}\n          type=\"text\"\n          name=\"filter\"\n          placeholder='Filter by name...'\n          value={filterValue}\n          onChange={handleFilterChange}\n           aria-label=\"Filter contacts by name\"\n        />\n      </label>\n    </form>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"contactsPage\":\"ContactsPage_contactsPage__NF97g\",\"contactForm\":\"ContactsPage_contactForm__kYlr6\",\"contactsWrapper\":\"ContactsPage_contactsWrapper__cDxJ4\",\"load\":\"ContactsPage_load__y5npH\"};","\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Contacts } from 'components/ContactsList/ContactsList';\nimport { ContactForm } from 'components/ContactsForm/ContactForm';\nimport { SearchFilter } from 'components/SearchFilter/SearchFilter';\nimport { selectIsLoading } from 'redux/contacts/contactsSelectors';\nimport { fetchAllContactsThunk } from 'redux/contacts/contactsOperations';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './ContactsPage.module.css'\n\n\n\nconst ContactsPage = () => {\n  const { isLoading } = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <div className={css.contactsPage}>\n      <ContactForm />\n      <div className={css.contactsWrapper}>\n        <SearchFilter />\n        {isLoading && <Loader />}\n        <Contacts />\n      </div>\n    </div>\n  );\n};\n\nexport default ContactsPage;"],"names":["selectContacts","state","contacts","selectAllContacts","createSelector","selectIsLoading","isLoading","selectFilterValue","error","filter","selectFilteredContacts","contact","name","toLowerCase","includes","ContactItem","_ref","id","number","dispatch","useDispatch","_jsxs","className","css","children","_jsx","type","onClick","deleteContactThunk","Contacts","useSelector","_Fragment","Array","isArray","length","map","schema","yup","required","min","ContactForm","_errors$name","_errors$number","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","contactList","onSubmit","some","item","trim","toast","addContactThunk","MdContactPhone","_objectSpread","placeholder","message","SearchFilter","filterValue","value","onChange","event","setFilter","target","useEffect","fetchAllContactsThunk","Loader"],"sourceRoot":""}